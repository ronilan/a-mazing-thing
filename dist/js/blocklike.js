const stage=new blockLike.Stage({parent:window.document.getElementById("blocklike-parent")||window.document.body,width:30*window.mazeColumns||window.innerWidth,height:30*window.mazeRows||window.innerHeight});stage.addClass("stage");const startSprite=new blockLike.Sprite({width:25,height:25,color:"#eeeeff"});startSprite.costume.css({color:"blue"}),startSprite.inner("&#9679"),startSprite.addClass("sprite");const goalSprite=new blockLike.Sprite({width:25,height:25,color:"#eeeeff"});goalSprite.costume.css({color:"darkblue"}),goalSprite.inner("&#9679"),goalSprite.addClass("sprite");const dotSprite=new blockLike.Sprite({width:25,height:25,color:"#eeeeff"});dotSprite.costume.css({color:"blue"}),dotSprite.inner("&#9679"),dotSprite.addClass("sprite");const cellSize=29;let maze=[],solver=null,start=null,goal=null;function numberToEmoji(e){let t="&#127794;";return e||(t="&sdot;"),1===e&&(t="&#127794;"),2===e&&(t="&#127795;"),3===e&&(t="&#127796;"),4===e&&(t="&#127968;"),5===e&&(t="&#127797;"),t}function gridY(e){const t=(stage.height-29*maze.length)/2+15;return stage.height/2-29*e-t}function gridX(e){const t=(stage.width-29*maze[0].length)/2+15;return-stage.width/2+29*e+t}function tracePath(e){const t=[];dotSprite.goTo(startSprite.x,gridY(startSprite.y));for(let o=0;o<e.length;o+=1){const r=dotSprite.clone();t.push(r),r.addTo(stage),r.goTo(gridX(e[o].column),gridY(e[o].row)),r.wait(.1)}dotSprite.wait(1),t.forEach((e=>{e.removeFrom(stage)})),startSprite.removeFrom(stage),goalSprite.removeFrom(stage),start=null,goal=null}function noPath(){goalSprite.inner("X"),goalSprite.refresh(),goalSprite.wait(1),goalSprite.removeFrom(stage),startSprite.removeFrom(stage),goalSprite.inner("&#9679"),goal=null,start=null}function clickHandler(e){start?goal||(goalSprite.goTo(gridX(e.column),gridY(e.row)),goalSprite.addTo(stage),goal=[e.row,e.column],solver.solve(start,goal),solver.path.length?e.invoke(tracePath,[solver.path]):e.invoke(noPath)):(startSprite.goTo(gridX(e.column),gridY(e.row)),startSprite.addTo(stage),start=[e.row,e.column])}stage.whenReceiveMessage("start",(()=>{maze.forEach(((e,t)=>{e.forEach(((e,o)=>{const r=new blockLike.Sprite({width:25,height:25});r.goTo(gridX(o),gridY(t)),r.row=t,r.column=o,r.value=e,r.addTo(stage),r.addClass("sprite"),r.inner(numberToEmoji(e)),r.value?r.css({cursor:"none"}):(r.css({cursor:"pointer"}),r.whenClicked((function(){this.invoke(clickHandler,this)})))}))}))})),window.document.addEventListener("mazed",(e=>{solver=e.detail.solver,maze=solver.maze,stage.broadcastMessage("start")}));